<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

 <!--  컴포넌트스캔을 사용하면 옆에있는것도 포함시킨다.<context:annotation-config/> -->
 <context:component-scan base-package="bitcamp.pms">
    <!--bitcamp.pms.test.*은 제외한다.  -->
    <context:exclude-filter type="regex" expression="bitcamp.pms.test.*"/>
 </context:component-scan>

<!--  <bean id="sqlSessionFactoryBuilder" class="org.apache.ibatis.session.SqlSessionFactoryBuilder"/>
 
 Object factory = sqlSessionFactoryBulider.build();
       iocConteiner.put("sqlSessionFactory",factory)
 <bean id="sqlSessionFactory" factory-bean="sqlSessionFactoryBuilder" factory-method="build">
    <constructor-arg ref="inputStream"></constructor-arg>
 </bean>
 
 자바식으로 => Object obj =  Resources.getResourceAsStream("bitcamp...");
                iocContainer.put("inputStream",inputStream)
 <bean id="inputStream" class="org.apache.ibatis.io.Resources" factory-method="getResourceAsStream">
    생성자의 파라미터로도 넣지만 스태틱매서드의 파라미터로도 넣을수있다.  
    <constructor-arg value="bitcamp/pms/config/mybatis-config.xml"/>
 </bean> -->
 
  <!-- 공장 에서 SqlSessionFactory 만들기
    => 주의!!
        - class 속성에 지정된 클래스가 FactoryBean 구현체라면,
        - 그 객체를 만들어 저장하는 것이 아니라
        - 그 객체의 getObject()를 호출하면 그 리턴 값을 저장한다.
   -->   
  <!--   <bean id="sqlSessionFactory" class="bitcamp.pms.factory.SqlSessionFactoryBean"></bean> -->
  
  
  
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource"/>
       <property name="mapperLocations" value="classpath*:bicamp/pms/sql/**/*.xml" />
       <property name="typeAliasesPackage" value="bitcamp.pms.domain"/>
   </bean>
   
   <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driver}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
   </bean>
    <!-- .properties 파일을 읽어서 그 데이터를 보관할 객체를 등록한다.  -->
    <context:property-placeholder location="bitcamp/pms/config/jdbc.properties"/> 
    
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />   
    </bean>
    
    <!--DAO인터페이스로 부터 DAO 구현체를 자동 생성하는 객체 등록  
     =>DAO 구현체가 사용할 SQL 맵퍼 파일은 namespace 값으로 찾음
     =>따라서 인터페이스 명과 SQL 맵퍼의 namespace 값은 같아야 한다.
     =>또한 인터페이스의 매서드명과 SQL id는 같아야한다.
    -->
 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 <property name="basePackage" value="bitcamp.pms.dao"/>
 </bean>
 
</beans>